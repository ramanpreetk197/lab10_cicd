name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger of the entire workflow

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Updated to use Node.js 16

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2  # Updated to use Node.js 16
      with:
        terraform_version: 1.3.5

    - name: Initialize Terraform
      run: terraform init

    - name: Validate Terraform
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan

    - name: Apply Terraform (on push to main)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest

    # Enable manual trigger specifically for the destroy job
    if: github.event_name == 'workflow_dispatch'

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Updated to use Node.js 16

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2  # Updated to use Node.js 16
      with:
        terraform_version: 1.3.5

    - name: Initialize Terraform
      run: terraform init

    - name: Refresh Terraform State
      run: terraform refresh

    - name: Plan Terraform Destroy
      run: terraform plan -destroy -out=destroy.plan

    - name: Terraform Destroy
      run: terraform destroy -auto-approve

    - name: Output Terraform State
      run: terraform show
